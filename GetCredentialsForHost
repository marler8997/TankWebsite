<?php

require_once "common.php";
require_once "mysql.php";
require_once "json.php";
require_once "rsa.php";

header("Content-Type: application/json");
$json = new JsonObject();

try {
  MysqlInit();

  $result = TryToLoginForGame();
  if(is_string($result)) $json->ex($result);

  list($uid,$userName) = $result;

  // Get HostUserName
  if(!isset($_REQUEST['HostUserName'])) $json->ex('Missing HostUserName');
  $hostUserName = trim($_REQUEST['HostUserName']);
  if(empty($hostUserName)) $json->ex('Empty HostUserName');
  if(!IsValidUserName($hostUserName)) $json->ex("The HostUserName you supplied '$hostUserName' is invalid");

  // Get HostDateTime
  if(!isset($_REQUEST['HostDateTime'])) $json->ex('Missing HostDateTime');
  $hostDateTime = trim($_REQUEST['HostDateTime']);
  if(empty($hostDateTime)) $json->ex('Empty HostDateTime');

  $result = date_parse_from_format('Y/m/d H:i:s', $hostDateTime);
  if($result === FALSE) $json->ex("Failed to parse the HostDateTime you supplied '$hostDateTime'");


  // TODO Make sure the HostDateTime is within a week or so? This helps restrict what can be encrypted.

  // Make sure the host is valid
  $result = MysqlQueryOne("SELECT Uid,PaidToPlay,Suspended FROM Users WHERE UserName='$hostUserName';");
  if($result === 0) $json->ex("The host user name you provided '$hostUserName' is not a user");
  list($uid,$paid,$suspended) = $result;
  if(!$paid) $json->ex("The host '$hostUserName' has not paid to play the game");
  if($suspended) $json->ex("The host '$hostUserName' has a suspended account");

  // Note: the hostDateTime is simply to make sure the encrypted key we are providing to the user
  //       will always be different every time they try to login so that no one can pretend to be
  //       the client after they get only one key.  The reason we use a datetime is so that we limit
  //       what the client can request to be encrypted.

  // TODO: Save a log of this login

  // create offline key
  $encryptedHostKeyBase64 = CreateHostCredentialsBase64($userName, $hostUserName, $hostDateTime);
  $json->addString('HostCredentials', $encryptedHostKeyBase64);

  //error_log("EncryptedBase64='$encryptedHostKeyBase64'");
  //error_log("Key='".$userName.$hostUserName.$hostDateTime."' Decrypted='".PublicKeyDecrypt(base64_decode($encryptedHostKeyBase64))."'");

  $json->endAll();

} catch(MysqlException $me) {
  $json->ex('Server Error: your reference number is '.$me->logRefNum);
}

?>